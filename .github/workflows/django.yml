name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.8]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.DJANGO_DB_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.DJANGO_DB_PASS }}
          POSTGRES_USER: ${{ secrets.DJANGO_DB_USER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 40s
          --health-timeout 120s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python3 -m venv venv/
        venv/bin/python -m pip install --upgrade pip
        venv/bin/pip install -r requirements.txt
    - name: Run API Tests
      run: |
        venv/bin/python website/manage.py test api
      env:
        DJANGO_DB_ENGINE: ${{ secrets.DJANGO_DB_ENGINE }}
        DJANGO_DB_HOST: postgres
        DJANGO_DB_NAME: ${{ secrets.DJANGO_DB_NAME }}
        DJANGO_DB_PASS: ${{ secrets.DJANGO_DB_PASS }}
        DJANGO_DB_PORT: ${{ secrets.DJANGO_DB_PORT }}
        DJANGO_DB_USER: ${{ secrets.DJANGO_DB_USER }}
        DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
    - name: Run Frontend Tests
      env:
        DJANGO_DB_ENGINE: ${{ secrets.DJANGO_DB_ENGINE }}
        DJANGO_DB_HOST: postgres
        DJANGO_DB_NAME: ${{ secrets.DJANGO_DB_NAME }}
        DJANGO_DB_PASS: ${{ secrets.DJANGO_DB_PASS }}
        DJANGO_DB_PORT: ${{ secrets.DJANGO_DB_PORT }}
        DJANGO_DB_USER: ${{ secrets.DJANGO_DB_USER }}
        DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      run: |
        venv/bin/python website/manage.py test converter_frontend

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: [test]
    environment: production
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python3 -m venv venv/
        venv/bin/python -m pip install --upgrade pip
        venv/bin/pip install -r requirements.txt
    - name: Deploy Django via SSH
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.WEB_HOST }}
        username: ${{ secrets.PROJECT_USER }}
        port: ${{ secrets.WEB_HOST_PORT }}
        key: ${{ secrets.PROJECT_USER_KEY }}
        source: "website/*"
        target: "website"
        strip_components: 1

    - name: Collect static and restart Application Server uWSGI
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.WEB_HOST }}
        username: ${{ secrets.PROJECT_USER }}
        port: ${{ secrets.WEB_HOST_PORT }}
        key: ${{ secrets.PROJECT_USER_KEY }}
        script: yes yes | /home/${{ secrets.PROJECT_USER }}/venv/bin/python /home/${{ secrets.PROJECT_USER }}/website/manage.py collectstatic && sudo /usr/bin/systemctl restart uwsgi-app@${{ secrets.PROJECT_USER }}.service